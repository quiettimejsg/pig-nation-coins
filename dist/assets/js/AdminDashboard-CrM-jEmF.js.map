{"version":3,"mappings":"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","names":["AdminDashboardComponent","t","useTranslation","navigate","useNavigate","currentUser","useStore","users","setUsers","useState","transactions","setTransactions","stats","setStats","totalUsers","totalTransactions","totalVolume","useEffect","role","storeUsers","getState","allUsers","Object","values","allTransactions","length","reduce","sum","tx","amount","_jsx","className","children","jsxRuntimeExports","jsxs","jsx","fallback","toFixed","slice","map","user","index","_jsxs","username","balance","id","Date","timestamp","toLocaleDateString","type","AdminDashboard","HTMLElement","connectedCallback","this","attachShadow","mode","mountPoint","document","createElement","shadowRoot","appendChild","__vitePreload","import","__VITE_PRELOAD__","then","React","ReactDOM","createRoot","render","disconnectedCallback","innerHTML","customElements","get","define"],"ignoreList":[],"sources":["../../../src/views/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useStore } from '../store';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction AdminDashboardComponent() {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useStore();\r\n  const [users, setUsers] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [stats, setStats] = useState({\r\n    totalUsers: 0,\r\n    totalTransactions: 0,\r\n    totalVolume: 0\r\n  });\r\n  \r\n  useEffect(() => {\r\n    // 检查用户是否已登录且是管理员\r\n    if (!currentUser || currentUser.role !== 'admin') {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    \r\n    // 获取用户列表和交易记录（在实际应用中会调用API）\r\n    const storeUsers = useStore.getState().users;\r\n    const allUsers = storeUsers \r\n      ? Object.values(storeUsers) \r\n      : [];\r\n    \r\n    const allTransactions = useStore.getState().transactions || [];\r\n    \r\n    setUsers(allUsers);\r\n    setTransactions(allTransactions);\r\n    \r\n    // 统计数据\r\n    setStats({\r\n      totalUsers: allUsers.length,\r\n      totalTransactions: allTransactions.length,\r\n      totalVolume: allTransactions.reduce((sum, tx) => sum + tx.amount, 0)\r\n    });\r\n  }, [currentUser, navigate]);\r\n  \r\n  if (!currentUser) return null;\r\n  \r\n  return (\r\n    <div className=\"admin-dashboard-page\">\r\n      <div className=\"content-with-glass\">\r\n        <h1>{t('admin.welcome', {fallback: '管理员控制台'})}</h1>\r\n        \r\n        <div className=\"stats-cards\">\r\n          <div className=\"stat-card\">\r\n            <h3>{t('admin.total_users', {fallback: '总用户数'})}</h3>\r\n            <p className=\"stat-value\">{stats.totalUsers}</p>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>{t('admin.total_transactions', {fallback: '总交易数'})}</h3>\r\n            <p className=\"stat-value\">{stats.totalTransactions}</p>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>{t('admin.total_volume', {fallback: '总交易额'})}</h3>\r\n            <p className=\"stat-value\">¥{stats.totalVolume.toFixed(2)}</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"section\">\r\n          <h2>{t('admin.recent_users', {fallback: '最近用户'})}</h2>\r\n          \r\n          {users.length === 0 ? (\r\n            <p className=\"no-data\">{t('admin.no_users', {fallback: '暂无用户数据'})}</p>\r\n          ) : (\r\n            <ul className=\"user-list\">\r\n              {users.slice(0, 5).map((user, index) => (\r\n                <li key={user.id || index} className=\"user-item\">\r\n                  <div className=\"user-info\">\r\n                    <span className=\"username\">{user.username}</span>\r\n                    <span className=\"user-role\">{user.role}</span>\r\n                  </div>\r\n                  <span className=\"user-balance\">¥{user.balance?.toFixed(2)}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"section\">\r\n          <h2>{t('admin.recent_transactions', {fallback: '最近交易'})}</h2>\r\n          \r\n          {transactions.length === 0 ? (\r\n            <p className=\"no-data\">{t('admin.no_transactions', {fallback: '暂无交易数据'})}</p>\r\n          ) : (\r\n            <ul className=\"transaction-list\">\r\n              {transactions.slice(0, 5).map((tx, index) => (\r\n                <li key={tx.id || index} className=\"transaction-item\">\r\n                  <div className=\"transaction-details\">\r\n                    <span className=\"transaction-date\">\r\n                      {new Date(tx.timestamp).toLocaleDateString()}\r\n                    </span>\r\n                    <span className=\"transaction-user\">\r\n                      {tx.username}\r\n                    </span>\r\n                    <span className=\"transaction-type\">\r\n                      {t(`transaction.${tx.type}`, {fallback: tx.type})}\r\n                    </span>\r\n                  </div>\r\n                  <span className=\"transaction-amount\">\r\n                    ¥{tx.amount.toFixed(2)}\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// 注册为自定义元素\r\nclass AdminDashboard extends HTMLElement {\r\n  connectedCallback() {\r\n    this.attachShadow({ mode: 'open' });\r\n    \r\n    // 创建一个div作为React的挂载点\r\n    const mountPoint = document.createElement('div');\r\n    this.shadowRoot.appendChild(mountPoint);\r\n    \r\n    // 导入React和ReactDOM\r\n    import('react').then((React) => {\r\n      import('react-dom/client').then((ReactDOM) => {\r\n        // 创建React根并渲染组件\r\n        const root = ReactDOM.createRoot(mountPoint);\r\n        root.render(React.createElement(AdminDashboardComponent));\r\n      });\r\n    });\r\n  }\r\n  \r\n  disconnectedCallback() {\r\n    // 清理\r\n    if (this.shadowRoot) {\r\n      this.shadowRoot.innerHTML = '';\r\n    }\r\n  }\r\n}\r\n\r\n// 注册自定义元素\r\nif (!customElements.get('admin-dashboard')) {\r\n  customElements.define('admin-dashboard', AdminDashboard);\r\n}\r\n\r\nexport default AdminDashboardComponent;"],"file":"assets/js/AdminDashboard-CrM-jEmF.js"}