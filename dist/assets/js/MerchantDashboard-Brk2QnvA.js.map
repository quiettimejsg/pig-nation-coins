{"version":3,"file":"MerchantDashboard-Brk2QnvA.js","sources":["../../../src/views/MerchantDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useStore } from '../store';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction MerchantDashboard() {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useStore();\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [stats, setStats] = useState({\r\n    dailyTotal: 0,\r\n    weeklyTotal: 0,\r\n    monthlyTotal: 0,\r\n  });\r\n  \r\n  useEffect(() => {\r\n    // 检查用户是否已登录且是商家\r\n    if (!currentUser || currentUser.role !== 'merchant') {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    \r\n    // 获取交易记录（在实际应用中会调用API）\r\n    const allTransactions = useStore.getState().transactions || [];\r\n    // 过滤商家相关交易（在实际环境中应使用merchantId过滤）\r\n    const merchantTransactions = allTransactions.filter(\r\n      tx => tx.merchantInfo?.id === currentUser.id || \r\n           tx.merchantInfo?.name === currentUser.username\r\n    );\r\n    \r\n    setTransactions(merchantTransactions);\r\n    \r\n    // 计算统计数据\r\n    const now = new Date();\r\n    const today = new Date(now.setHours(0, 0, 0, 0));\r\n    const lastWeek = new Date(today);\r\n    lastWeek.setDate(lastWeek.getDate() - 7);\r\n    const lastMonth = new Date(today);\r\n    lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n    \r\n    const dailyTransactions = merchantTransactions.filter(\r\n      tx => new Date(tx.timestamp) >= today\r\n    );\r\n    \r\n    const weeklyTransactions = merchantTransactions.filter(\r\n      tx => new Date(tx.timestamp) >= lastWeek\r\n    );\r\n    \r\n    const monthlyTransactions = merchantTransactions.filter(\r\n      tx => new Date(tx.timestamp) >= lastMonth\r\n    );\r\n    \r\n    setStats({\r\n      dailyTotal: dailyTransactions.reduce((sum, tx) => sum + tx.amount, 0),\r\n      weeklyTotal: weeklyTransactions.reduce((sum, tx) => sum + tx.amount, 0),\r\n      monthlyTotal: monthlyTransactions.reduce((sum, tx) => sum + tx.amount, 0),\r\n    });\r\n  }, [currentUser, navigate]);\r\n  \r\n  if (!currentUser) return null;\r\n  \r\n  return (\r\n    <div className=\"merchant-dashboard-page\">\r\n      <div className=\"content-with-glass\">\r\n        <h1>{t('merchant.welcome', {fallback: '欢迎'})}, {currentUser.username}!</h1>\r\n        \r\n        <div className=\"stats-cards\">\r\n          <div className=\"stat-card\">\r\n            <h3>{t('merchant.daily_sales', {fallback: '今日销售'})}</h3>\r\n            <p className=\"stat-value\">¥{stats.dailyTotal.toFixed(2)}</p>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>{t('merchant.weekly_sales', {fallback: '本周销售'})}</h3>\r\n            <p className=\"stat-value\">¥{stats.weeklyTotal.toFixed(2)}</p>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>{t('merchant.monthly_sales', {fallback: '本月销售'})}</h3>\r\n            <p className=\"stat-value\">¥{stats.monthlyTotal.toFixed(2)}</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"merchant-balance\">\r\n          <h2>{t('merchant.account_balance', {fallback: '账户余额'})}</h2>\r\n          <p className=\"balance-amount\">¥{currentUser.balance?.toFixed(2)}</p>\r\n        </div>\r\n        \r\n        <div className=\"section\">\r\n          <h2>{t('merchant.recent_transactions', {fallback: '最近交易'})}</h2>\r\n          \r\n          {transactions.length === 0 ? (\r\n            <p className=\"no-transactions\">{t('merchant.no_transactions', {fallback: '暂无交易记录'})}</p>\r\n          ) : (\r\n            <ul className=\"transaction-list\">\r\n              {transactions.map((tx, index) => (\r\n                <li key={tx.id || index} className=\"transaction-item payment\">\r\n                  <div className=\"transaction-details\">\r\n                    <span className=\"transaction-date\">\r\n                      {new Date(tx.timestamp).toLocaleDateString()}\r\n                    </span>\r\n                    <span className=\"transaction-type\">\r\n                      {t('transaction.payment', {fallback: '收款'})}\r\n                    </span>\r\n                  </div>\r\n                  <span className=\"transaction-amount positive\">\r\n                    + ¥{tx.amount.toFixed(2)}\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MerchantDashboard;"],"names":["MerchantDashboard","t","useTranslation","navigate","useNavigate","currentUser","useStore","transactions","setTransactions","useState","stats","setStats","dailyTotal","weeklyTotal","monthlyTotal","useEffect","role","merchantTransactions","getState","filter","tx","merchantInfo","id","name","username","now","today","Date","setHours","lastWeek","setDate","getDate","lastMonth","setMonth","getMonth","dailyTransactions","timestamp","weeklyTransactions","monthlyTransactions","reduce","sum","amount","_jsx","className","children","jsxRuntimeExports","jsxs","fallback","jsx","toFixed","balance","length","map","index","_jsxs","toLocaleDateString"],"mappings":"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"}