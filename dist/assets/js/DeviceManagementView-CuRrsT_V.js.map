{"version":3,"file":"DeviceManagementView-CuRrsT_V.js","sources":["../../../src/components/DeviceManager.jsx","../../../src/views/DeviceManagementView.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport '../styles/DeviceManager.css';\r\nimport { FaDesktop, FaMobile, FaTablet, FaLaptop, FaTrash, FaCheck, FaExclamationTriangle } from 'react-icons/fa';\r\n\r\nconst DeviceManager = ({ onClose }) => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [confirmingDevice, setConfirmingDevice] = useState(null);\r\n  const { t } = useTranslation();\r\n\r\n  // 加载设备列表\r\n  useEffect(() => {\r\n    fetchDevices();\r\n  }, []);\r\n\r\n  // 模拟获取设备数据\r\n  const fetchDevices = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // 实际应用中，这里应该从API获取数据\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // 模拟设备数据\r\n      const mockDevices = [\r\n        {\r\n          id: '1',\r\n          name: 'Windows PC - Chrome',\r\n          type: 'desktop',\r\n          browser: 'Chrome',\r\n          os: 'Windows 10',\r\n          lastActive: new Date(Date.now() - 1000 * 60 * 5), // 5分钟前\r\n          isCurrent: true,\r\n          ipAddress: '192.168.1.1',\r\n          location: '北京, 中国',\r\n          trusted: true\r\n        }\r\n      ];\r\n      \r\n      setDevices(mockDevices);\r\n    } catch (err) {\r\n      setError(t('device_management.error'));\r\n      console.error('获取设备失败:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // 格式化最后活跃时间\r\n  const formatLastActive = (date) => {\r\n    const now = new Date();\r\n    const diffMs = now - date;\r\n    const diffSec = Math.floor(diffMs / 1000);\r\n    const diffMin = Math.floor(diffSec / 60);\r\n    const diffHour = Math.floor(diffMin / 60);\r\n    const diffDay = Math.floor(diffHour / 24);\r\n    \r\n    if (diffMin < 1) {\r\n      return t('device_management.just_now');\r\n    } else if (diffMin < 60) {\r\n      return `${diffMin}${t('device_management.minutes_ago')}`;\r\n    } else if (diffHour < 24) {\r\n      return `${diffHour}${t('device_management.hours_ago')}`;\r\n    } else {\r\n      return `${diffDay}${t('device_management.days_ago')}`;\r\n    }\r\n  };\r\n\r\n  // 获取设备图标\r\n  const getDeviceIcon = (type) => {\r\n    switch (type) {\r\n      case 'desktop':\r\n        return <FaDesktop />;\r\n      case 'mobile':\r\n        return <FaMobile />;\r\n      case 'tablet':\r\n        return <FaTablet />;\r\n      case 'laptop':\r\n        return <FaLaptop />;\r\n      default:\r\n        return <FaDesktop />;\r\n    }\r\n  };\r\n\r\n  // 移除设备\r\n  const removeDevice = async (deviceId) => {\r\n    try {\r\n      // 实际应用中应该调用API\r\n      await new Promise(resolve => setTimeout(resolve, 800));\r\n      \r\n      // 更新本地状态\r\n      setDevices(devices.filter(device => device.id !== deviceId));\r\n      setConfirmingDevice(null);\r\n    } catch (err) {\r\n      setError(t('device_management.remove_failed'));\r\n      console.error('移除设备失败:', err);\r\n    }\r\n  };\r\n\r\n  // 信任或取消信任设备\r\n  const toggleTrustDevice = async (deviceId) => {\r\n    try {\r\n      // 实际应用中应该调用API\r\n      await new Promise(resolve => setTimeout(resolve, 800));\r\n      \r\n      // 更新本地状态\r\n      setDevices(devices.map(device => \r\n        device.id === deviceId \r\n          ? { ...device, trusted: !device.trusted } \r\n          : device\r\n      ));\r\n    } catch (err) {\r\n      setError(t('device_management.trust_failed'));\r\n      console.error('更新设备状态失败:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"device-manager\">\r\n      <div className=\"device-manager-header\">\r\n        <h2>{t('device_management.title')}</h2>\r\n        <button className=\"close-button\" onClick={onClose}>×</button>\r\n      </div>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <FaExclamationTriangle /> {error}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"device-info-header\">\r\n        <p>\r\n          {t('device_management.description')}\r\n        </p>\r\n      </div>\r\n      \r\n      {isLoading ? (\r\n        <div className=\"loading-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>{t('device_management.loading')}</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"device-list\">\r\n          {devices.length === 0 ? (\r\n            <div className=\"no-devices\">\r\n              <p>{t('device_management.no_devices')}</p>\r\n            </div>\r\n          ) : (\r\n            devices.map(device => (\r\n              <div key={device.id} className={`device-item ${device.isCurrent ? 'current-device' : ''}`}>\r\n                <div className=\"device-icon\">\r\n                  {getDeviceIcon(device.type)}\r\n                </div>\r\n                \r\n                <div className=\"device-details\">\r\n                  <div className=\"device-name\">\r\n                    {device.name}\r\n                    {device.isCurrent && <span className=\"current-tag\">{t('device_management.current_device')}</span>}\r\n                  </div>\r\n                  \r\n                  <div className=\"device-meta\">\r\n                    <span className=\"device-os\">{device.os}</span>\r\n                    <span className=\"dot-separator\">•</span>\r\n                    <span className=\"last-active\">{t('device_management.last_active')} {formatLastActive(device.lastActive)}</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"device-location\">\r\n                    <span className=\"ip-address\">IP: {device.ipAddress}</span>\r\n                    <span className=\"dot-separator\">•</span>\r\n                    <span className=\"location\">{device.location}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"device-actions\">\r\n                  {confirmingDevice === device.id ? (\r\n                    <div className=\"confirm-actions\">\r\n                      <button \r\n                        className=\"confirm-remove\" \r\n                        onClick={() => removeDevice(device.id)}\r\n                      >\r\n                        {t('device_management.confirm_remove')}\r\n                      </button>\r\n                      <button \r\n                        className=\"cancel-remove\"\r\n                        onClick={() => setConfirmingDevice(null)}\r\n                      >\r\n                        {t('device_management.cancel')}\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <button \r\n                        className={`trust-button ${device.trusted ? 'trusted' : ''}`}\r\n                        onClick={() => toggleTrustDevice(device.id)}\r\n                        title={device.trusted ? t('device_management.untrust_device') : t('device_management.trust_device')}\r\n                      >\r\n                        <FaCheck /> {device.trusted ? t('device_management.trusted') : t('device_management.trust_device')}\r\n                      </button>\r\n                      \r\n                      {!device.isCurrent && (\r\n                        <button \r\n                          className=\"remove-button\"\r\n                          onClick={() => setConfirmingDevice(device.id)}\r\n                          title={t('device_management.remove_tooltip')}\r\n                        >\r\n                          <FaTrash /> {t('device_management.remove')}\r\n                        </button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"device-manager-footer\">\r\n        <button \r\n          className=\"sign-out-all-button\"\r\n          onClick={() => {\r\n            // 实际应用中应该调用登出所有设备的API\r\n            // 并且可能需要二次确认\r\n            setDevices(devices.filter(device => device.isCurrent));\r\n          }}\r\n          disabled={devices.filter(d => !d.isCurrent).length === 0}\r\n        >\r\n          {t('device_management.sign_out_all')}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeviceManager; ","import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DeviceManager from '../components/DeviceManager.jsx';\r\nimport '../styles/DeviceManagementView.css';\r\n\r\nconst DeviceManagementView = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  const handleClose = () => {\r\n    // 返回到用户仪表板\r\n    navigate('/user');\r\n  };\r\n\r\n  return (\r\n    <div className=\"device-management-view\">\r\n      <DeviceManager onClose={handleClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeviceManagementView; "],"names":["DeviceManager","onClose","devices","setDevices","useState","isLoading","setIsLoading","error","setError","confirmingDevice","setConfirmingDevice","t","useTranslation","useEffect","fetchDevices","async","Promise","resolve","setTimeout","mockDevices","id","name","type","browser","os","lastActive","Date","now","isCurrent","ipAddress","location","trusted","err","formatLastActive","date","diffMs","diffSec","Math","floor","diffMin","diffHour","diffDay","getDeviceIcon","_jsx","FaDesktop","FaMobile","FaTablet","FaLaptop","className","children","_jsxs","onClick","FaExclamationTriangle","length","map","device","deviceId","filter","removeDevice","_Fragment","toggleTrustDevice","title","FaCheck","FaTrash","disabled","d","DeviceManagementView","navigate","useNavigate","handleClose"],"mappings":"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"}