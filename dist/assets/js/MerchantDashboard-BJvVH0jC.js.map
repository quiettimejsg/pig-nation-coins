{"version":3,"file":"MerchantDashboard-BJvVH0jC.js","sources":["../../../src/views/MerchantDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useStore } from '../store';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction MerchantDashboardComponent() {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useStore();\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [stats, setStats] = useState({\r\n    dailyTotal: 0,\r\n    weeklyTotal: 0,\r\n    monthlyTotal: 0,\r\n  });\r\n  \r\n  useEffect(() => {\r\n    // 检查用户是否已登录且是商家\r\n    if (!currentUser || currentUser.role !== 'merchant') {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    \r\n    // 获取交易记录（在实际应用中会调用API）\r\n    const allTransactions = useStore.getState().transactions || [];\r\n    // 过滤商家相关交易（在实际环境中应使用merchantId过滤）\r\n    const merchantTransactions = allTransactions.filter(\r\n      tx => tx.merchantInfo?.id === currentUser.id || \r\n           tx.merchantInfo?.name === currentUser.username\r\n    );\r\n    \r\n    setTransactions(merchantTransactions);\r\n    \r\n    // 计算统计数据\r\n    const now = new Date();\r\n    const today = new Date(now.setHours(0, 0, 0, 0));\r\n    const lastWeek = new Date(today);\r\n    lastWeek.setDate(lastWeek.getDate() - 7);\r\n    const lastMonth = new Date(today);\r\n    lastMonth.setMonth(lastMonth.getMonth() - 1);\r\n    \r\n    const dailyTransactions = merchantTransactions.filter(\r\n      tx => new Date(tx.timestamp) >= today\r\n    );\r\n    \r\n    const weeklyTransactions = merchantTransactions.filter(\r\n      tx => new Date(tx.timestamp) >= lastWeek\r\n    );\r\n    \r\n    const monthlyTransactions = merchantTransactions.filter(\r\n      tx => new Date(tx.timestamp) >= lastMonth\r\n    );\r\n    \r\n    setStats({\r\n      dailyTotal: dailyTransactions.reduce((sum, tx) => sum + tx.amount, 0),\r\n      weeklyTotal: weeklyTransactions.reduce((sum, tx) => sum + tx.amount, 0),\r\n      monthlyTotal: monthlyTransactions.reduce((sum, tx) => sum + tx.amount, 0),\r\n    });\r\n  }, [currentUser, navigate]);\r\n  \r\n  if (!currentUser) return null;\r\n  \r\n  return (\r\n    <div className=\"merchant-dashboard-page\">\r\n      <div className=\"content-with-glass\">\r\n        <h1>{t('merchant.welcome', {fallback: '欢迎'})}, {currentUser.username}!</h1>\r\n        \r\n        <div className=\"stats-cards\">\r\n          <div className=\"stat-card\">\r\n            <h3>{t('merchant.daily_sales', {fallback: '今日销售'})}</h3>\r\n            <p className=\"stat-value\">¥{stats.dailyTotal.toFixed(2)}</p>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>{t('merchant.weekly_sales', {fallback: '本周销售'})}</h3>\r\n            <p className=\"stat-value\">¥{stats.weeklyTotal.toFixed(2)}</p>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>{t('merchant.monthly_sales', {fallback: '本月销售'})}</h3>\r\n            <p className=\"stat-value\">¥{stats.monthlyTotal.toFixed(2)}</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"merchant-balance\">\r\n          <h2>{t('merchant.account_balance', {fallback: '账户余额'})}</h2>\r\n          <p className=\"balance-amount\">¥{currentUser.balance?.toFixed(2)}</p>\r\n        </div>\r\n        \r\n        <div className=\"section\">\r\n          <h2>{t('merchant.recent_transactions', {fallback: '最近交易'})}</h2>\r\n          \r\n          {transactions.length === 0 ? (\r\n            <p className=\"no-transactions\">{t('merchant.no_transactions', {fallback: '暂无交易记录'})}</p>\r\n          ) : (\r\n            <ul className=\"transaction-list\">\r\n              {transactions.map((tx, index) => (\r\n                <li key={tx.id || index} className=\"transaction-item payment\">\r\n                  <div className=\"transaction-details\">\r\n                    <span className=\"transaction-date\">\r\n                      {new Date(tx.timestamp).toLocaleDateString()}\r\n                    </span>\r\n                    <span className=\"transaction-type\">\r\n                      {t('transaction.payment', {fallback: '收款'})}\r\n                    </span>\r\n                  </div>\r\n                  <span className=\"transaction-amount positive\">\r\n                    + ¥{tx.amount.toFixed(2)}\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MerchantDashboard;"],"names":["MerchantDashboard$1","MerchantDashboard"],"mappings":"kHAuHA,MAAAA,EAAeC"}